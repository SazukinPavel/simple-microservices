version: "3.8"
services:
  simple-microservices-api_gateway:
    container_name: simple-microservices-api-gateway
    restart: always
    hostname: API_GATEWAY_HOST
    networks:
      - server
    build: ./api-gateway-service
    env_file:
      - .env
    ports:
      - $API_GATEWAY_PORT:$API_GATEWAY_PORT
  simple-microservices-message_service:
    container_name: simple-microservices-message_service
    restart: always
    hostname: $MESSAGE_SERVICE_HOST
    networks:
      - server
    build: ./message-service
    env_file:
      - .env
    depends_on:
      - simple-microservices-message_service_mysql
  simple-microservices-message_service_mysql:
    container_name: simple-microservices-message_service_mysql
    image: mysql:5.7
    restart: unless-stopped
    hostname: $MESSAGE_SERVICE_MYSQL_HOST
    env_file: .env
    environment:
      MYSQL_DATABASE: $MESSAGE_SERVICE_MYSQL_DATABASE
      MYSQL_ROOT_PASSWORD: $MESSAGE_SERVICE_MYSQL_ROOT_PASSWORD
    ports:
      - $MESSAGE_SERVICE_MYSQL_PORT:$MESSAGE_SERVICE_MYSQL_PORT
    volumes:
      - ./mysql-db:/docker-entrypoint-initdb.d/
    networks:
      - server
  simple-microservices-logs_service:
    container_name: simple-microservices-logs_service
    restart: always
    hostname: $LOGS_SERVICE_HOST
    networks:
      - server
    build: ./logs-service
    env_file:
      - .env
    depends_on:
      - simple-microservices-logs_mongo
  simple-microservices-logs_mongo:
    image: mongo:5.0.2
    container_name: simple-microservices-logs_mongo
    restart: unless-stopped
    hostname: $LOGS_SERVICE_MONGO_HOST
    networks:
      - server
    volumes:
      - ./mongodb:/data/db
    ports:
      - $LOGS_SERVICE_MONGO_PORT:$LOGS_SERVICE_MONGO_PORT
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$LOGS_SERVICE_DATABASE_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$LOGS_SERVICE_DATABASE_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$LOGS_SERVICE_DATABASE_NAME
networks:
  server:
    driver: bridge
